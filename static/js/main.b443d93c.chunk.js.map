{"version":3,"sources":["api/posts.ts","components/PostItem/PostItem.tsx","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/CommentItem/CommentItem.tsx","components/CommentList/CommentList.tsx","components/PostDetails/PostDetails.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getPosts","postId","a","URL","fetch","res","ok","Error","status","statusText","json","result","PostItem","post","setShowDetails","showDetails","useState","button","setButton","className","userId","title","type","id","onClick","prev","disabled","PostsList","setPostList","postList","userSelected","useEffect","then","length","filter","el","map","getComments","deleteComment","method","postComment","newComment","options","headers","body","JSON","stringify","NewCommentForm","setCommentsToPost","name","setName","email","setEmail","setBody","onSubmit","e","preventDefault","catch","err","console","warn","message","placeholder","onChange","target","value","CommentItem","comment","CommentList","commentsToPost","hideComents","setHideComment","PostDetails","postDetails","setPostDetails","users","Header","setUserSelected","Number","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b443d93c.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getPosts = async (postId?: number) => {\n  const URL = postId\n    ? `${BASE_URL}/posts/${postId}`\n    : `${BASE_URL}/posts`;\n\n  const res = await fetch(URL);\n\n  if (!res.ok) {\n    throw new Error(`${res.status} ${res.statusText}`);\n  }\n\n  const result = await res.json();\n\n  return result;\n};\n","import { useState } from 'react';\nimport { Post } from '../../types/Post';\n\ntype Props = {\n  post: Post;\n  setShowDetails: React.Dispatch<React.SetStateAction<number | null>>\n  showDetails: number | null;\n};\n\nexport const PostItem: React.FC<Props> = (\n  {\n    post, setShowDetails, showDetails,\n  },\n) => {\n  const [button, setButton] = useState(true);\n\n  return (\n    <li className=\"PostsList__item\">\n      <div>\n        <b>{`[User #${post.userId}]: `}</b>\n        {post.title}\n      </div>\n      <button\n        type=\"button\"\n        className={`PostsList__button button ${showDetails !== null && showDetails === post.id ? 'red' : ''}`}\n        onClick={() => {\n          if (showDetails !== null && showDetails === post.id) {\n            setShowDetails(null);\n          } else {\n            setShowDetails(post.id);\n          }\n\n          setButton(prev => !prev);\n        }}\n        disabled={showDetails !== null && showDetails !== post.id}\n      >\n        {button ? 'Open' : 'Close'}\n      </button>\n    </li>\n  );\n};\n","import { useEffect } from 'react';\nimport { getPosts } from '../../api/posts';\nimport { Post } from '../../types/Post';\nimport { PostItem } from '../PostItem/PostItem';\nimport './PostsList.scss';\n\ntype Props = {\n  postList: Post[];\n  setPostList: React.Dispatch<React.SetStateAction<Post[]>>;\n  userSelected: number;\n  setShowDetails: React.Dispatch<React.SetStateAction<number | null>>;\n  showDetails: number | null;\n};\n\nexport const PostsList: React.FC<Props> = (\n  {\n    setPostList,\n    postList,\n    userSelected,\n    setShowDetails,\n    showDetails,\n  },\n) => {\n  useEffect(() => {\n    getPosts()\n      .then(res => {\n        if (res?.length > 0) {\n          setPostList(res);\n        }\n      });\n  }, []);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {\n          postList\n            .filter(el => {\n              switch (userSelected) {\n                case 0:\n                  return true;\n                default:\n                  return el.userId === userSelected;\n              }\n            })\n            .map(el => {\n              return (\n                <PostItem\n                  post={el}\n                  key={el.id}\n                  setShowDetails={setShowDetails}\n                  showDetails={showDetails}\n                />\n              );\n            })\n        }\n      </ul>\n    </div>\n  );\n};\n","import { NewComment } from '../types/NewComment';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nexport const getComments = async (postId: number) => {\n  const URL = `${BASE_URL}/comments?postId=${postId}`;\n\n  const res = await fetch(URL);\n\n  if (!res.ok) {\n    throw new Error(`${res.status} ${res.statusText}`);\n  }\n\n  const result = await res.json();\n\n  return result;\n};\n\nexport const deleteComment = async (id: number) => {\n  const URL = `${BASE_URL}/comments/${id}`;\n\n  const res = await fetch(URL, { method: 'DELETE' });\n\n  if (!res.ok) {\n    throw new Error(`${res.status} ${res.statusText}`);\n  }\n\n  return res;\n};\n\nexport const postComment = async (newComment: NewComment) => {\n  const URL = `${BASE_URL}/comments`;\n\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(newComment),\n  };\n\n  const res = await fetch(URL, options);\n\n  if (!res.ok) {\n    throw new Error(`${res.status} ${res.statusText}`);\n  }\n\n  const result = await res.json();\n\n  return result;\n};\n","import { useState } from 'react';\nimport { postComment } from '../../api/comments';\nimport { Comment } from '../../types/Comment';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number;\n  setCommentsToPost: React.Dispatch<React.SetStateAction<Comment[]>>;\n};\n\nexport const NewCommentForm: React.FC<Props> = (\n  {\n    postId, setCommentsToPost,\n  },\n) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const submitHandler = () => {\n    if (name === '' || email === '' || body === '') {\n      return;\n    }\n\n    const newComment = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    postComment(newComment)\n      .then(res => {\n        if (res.body) {\n          setCommentsToPost(prev => {\n            return [...prev, res];\n          });\n        }\n      })\n      .catch(err => {\n        // eslint-disable-next-line no-console\n        console.warn(`${err.message}`);\n      });\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        submitHandler();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n          value={name}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n          value={email}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setBody(e.target.value);\n          }}\n          value={body}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { Comment } from '../../types/Comment';\nimport { deleteComment } from '../../api/comments';\n\ntype Props = {\n  comment: Comment;\n  setCommentsToPost: React.Dispatch<React.SetStateAction<Comment[]>>;\n};\n\nexport const CommentItem: React.FC<Props> = (\n  {\n    comment, setCommentsToPost,\n  },\n) => {\n  const deleteCommentHandle = () => {\n    deleteComment(comment.id)\n      .then(res => {\n        if (res.ok) {\n          setCommentsToPost(prev => {\n            return [...prev].filter(el => el.id !== comment.id);\n          });\n        }\n      })\n      .catch(err => {\n        // eslint-disable-next-line no-console\n        console.warn(`${err.message}`);\n      });\n  };\n\n  return (\n    <li className=\"PostDetails__list-item\">\n      <button\n        type=\"button\"\n        className=\"PostDetails__remove-button button\"\n        onClick={() => {\n          deleteCommentHandle();\n        }}\n      >\n        X\n      </button>\n      <p>{comment.body}</p>\n    </li>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getComments } from '../../api/comments';\nimport { Comment } from '../../types/Comment';\nimport { CommentItem } from '../CommentItem/CommentItem';\n\ntype Props = {\n  postId: number;\n  commentsToPost: Comment[];\n  setCommentsToPost: React.Dispatch<React.SetStateAction<Comment[]>>;\n};\n\nexport const CommentList: React.FC<Props> = (\n  {\n    postId, commentsToPost, setCommentsToPost,\n  },\n) => {\n  const [hideComents, setHideComment] = useState(false);\n\n  useEffect(() => {\n    getComments(postId)\n      .then(res => {\n        if (res.length > 0) {\n          setCommentsToPost(res);\n        }\n      })\n      .catch(err => {\n        // eslint-disable-next-line no-console\n        console.warn(err);\n      });\n  }, []);\n\n  return (\n    <section className=\"PostDetails__comments\">\n      {\n        commentsToPost.length > 0 && (\n          <>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                setHideComment(prev => !prev);\n              }}\n            >\n              {`${hideComents ? 'Show' : 'Hide'} ${commentsToPost.length} comments`}\n            </button>\n\n            {\n              !hideComents && (\n                <ul className=\"PostDetails__list\">\n                  {\n                    commentsToPost.map(el => {\n                      return (\n                        <CommentItem\n                          comment={el}\n                          key={el.id}\n                          setCommentsToPost={setCommentsToPost}\n                        />\n                      );\n                    })\n                  }\n                </ul>\n              )\n            }\n          </>\n        )\n      }\n    </section>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { Post } from '../../types/Post';\nimport { Comment } from '../../types/Comment';\nimport { getPosts } from '../../api/posts';\nimport { CommentList } from '../CommentList/CommentList';\nimport './PostDetails.scss';\n\ntype Props = {\n  showDetails: number;\n};\n\nexport const PostDetails: React.FC <Props> = ({ showDetails }) => {\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [commentsToPost, setCommentsToPost] = useState<Comment[]>([]);\n\n  useEffect(() => {\n    getPosts(showDetails)\n      .then(res => {\n        if (res.body) {\n          setPostDetails(res);\n        }\n      })\n      // eslint-disable-next-line no-console\n      .catch(err => console.warn(err));\n  }, []);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {\n        postDetails && (\n          <>\n            <section className=\"PostDetails__post\">\n              <p>{postDetails.body}</p>\n            </section>\n\n            <CommentList\n              postId={postDetails.id}\n              commentsToPost={commentsToPost}\n              setCommentsToPost={setCommentsToPost}\n            />\n\n            <section>\n              <div className=\"PostDetails__form-wrapper\">\n                <NewCommentForm\n                  postId={postDetails.id}\n                  setCommentsToPost={setCommentsToPost}\n                />\n              </div>\n            </section>\n          </>\n        )\n      }\n    </div>\n  );\n};\n","const users = [\n  { id: 0, name: 'All users' },\n  { id: 1, name: 'Leanne Graham' },\n  { id: 2, name: 'Ervin Howell' },\n  { id: 3, name: 'Clementine Bauch' },\n  { id: 4, name: 'Patricia Lebsack' },\n  { id: 5, name: 'Chelsey Dietrich' },\n  { id: 6, name: 'Mrs. Dennis Schulist' },\n  { id: 7, name: 'Kurtis Weissnat' },\n  { id: 8, name: 'Nicholas Runolfsdottir V' },\n  { id: 9, name: 'Glenna Reichert' },\n];\n\ntype Props = {\n  setUserSelected: React.Dispatch<React.SetStateAction<number>>;\n  setShowDetails: React.Dispatch<React.SetStateAction<number | null>>;\n};\n\nexport const Header: React.FC<Props> = (\n  {\n    setUserSelected,\n    setShowDetails,\n  },\n) => {\n  return (\n    <header className=\"App__header\">\n      <label>\n        Select a user: &nbsp;\n\n        <select\n          className=\"App__user-selector\"\n          onChange={(e) => {\n            setUserSelected(Number(e.target.value));\n            setShowDetails(null);\n          }}\n        >\n          {\n            users.map(el => {\n              return (\n                <option value={el.id} key={el.id}>{el.name}</option>\n              );\n            })\n          }\n        </select>\n      </label>\n    </header>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Post } from './types/Post';\nimport { Header } from './components/Header/Header';\n\nconst App: React.FC = () => {\n  const [postList, setPostList] = useState<Post[]>([]);\n  const [userSelected, setUserSelected] = useState(0);\n  const [showDetails, setShowDetails] = useState<null | number>(null);\n\n  return (\n    <div className=\"App\">\n      <Header\n        setUserSelected={setUserSelected}\n        setShowDetails={setShowDetails}\n      />\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            postList={postList}\n            setPostList={setPostList}\n            userSelected={userSelected}\n            setShowDetails={setShowDetails}\n            showDetails={showDetails}\n          />\n        </div>\n        <div className=\"App__content\">\n          {\n            showDetails && (\n              <PostDetails\n                showDetails={showDetails}\n              />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}